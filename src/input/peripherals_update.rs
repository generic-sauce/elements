use crate::prelude::*;

pub enum PeripheralsUpdate {
	KeyPress(Key),
	KeyRelease(Key),
	Text(Character),
	MouseMove(SubPixelVec),
}

#[derive(Eq, PartialEq, Hash, Copy, Clone)]
pub enum Character {
	Char(char),
	Backspace,
	Delete,
	Right,
	Left,
	Up,
	Down,
	Unknown,
}

#[derive(Eq, PartialEq, Hash, Copy, Clone, Debug)]
pub enum Key {
	LeftMouse,
	RightMouse,
	MiddleMouse,
	OtherMouse(u8),
	Key1,
	Key2,
	Key3,
	Key4,
	Key5,
	Key6,
	Key7,
	Key8,
	Key9,
	Key0,
	A,
	B,
	C,
	D,
	E,
	F,
	G,
	H,
	I,
	J,
	K,
	L,
	M,
	N,
	O,
	P,
	Q,
	R,
	S,
	T,
	U,
	V,
	W,
	X,
	Y,
	Z,
	Escape,
	F1,
	F2,
	F3,
	F4,
	F5,
	F6,
	F7,
	F8,
	F9,
	F10,
	F11,
	F12,
	F13,
	F14,
	F15,
	F16,
	F17,
	F18,
	F19,
	F20,
	F21,
	F22,
	F23,
	F24,
	Snapshot,
	Scroll,
	Pause,
	Insert,
	Home,
	Delete,
	End,
	PageDown,
	PageUp,
	Left,
	Up,
	Right,
	Down,
	Back,
	Return,
	Space,
	Compose,
	Caret,
	Numlock,
	Numpad0,
	Numpad1,
	Numpad2,
	Numpad3,
	Numpad4,
	Numpad5,
	Numpad6,
	Numpad7,
	Numpad8,
	Numpad9,
	NumpadComma,
	NumpadEnter,
	NumpadEquals,
	Apostrophe,
	Apps,
	At,
	Ax,
	Backslash,
	Calculator,
	Capital,
	Colon,
	Comma,
	Convert,
	Equals,
	Grave,
	Kana,
	Kanji,
	LAlt,
	LBracket,
	LControl,
	LShift,
	LWin,
	Mail,
	MediaSelect,
	MediaStop,
	Minus,
	Mute,
	MyComputer,
	NavigateForward,
	NavigateBackward,
	NextTrack,
	NoConvert,
	OEM102,
	Period,
	PlayPause,
	Power,
	PrevTrack,
	RAlt,
	RBracket,
	RControl,
	RShift,
	RWin,
	Semicolon,
	Slash,
	Sleep,
	Stop,
	Sysrq,
	Tab,
	Underline,
	Unlabeled,
	VolumeDown,
	VolumeUp,
	Wake,
	WebBack,
	WebFavorites,
	WebForward,
	WebHome,
	WebRefresh,
	WebSearch,
	WebStop,
	Yen,
	Copy,
	Paste,
	Cut,
	Unknown,
}

#[cfg(feature = "native-client")]
impl PeripheralsUpdate {
	pub fn from_winit_input(key_source: impl Into<Key>, state: win::ElementState) -> PeripheralsUpdate {
		match state {
			win::ElementState::Pressed => PeripheralsUpdate::KeyPress(key_source.into()),
			win::ElementState::Released => PeripheralsUpdate::KeyRelease(key_source.into()),
		}
	}

}

impl From<char> for Character {
	fn from(c: char) -> Self {
		if !c.is_ascii_control() {
			Character::Char(c)
		} else if c as u8 == 8 {
			Character::Backspace
		} else if c as u8 == 127 {
			Character::Delete
		} else {
			println!("unknown char: {}", c as u32);
			Character::Unknown
		}
	}
}

#[cfg(feature = "native-client")]
impl From<win::VirtualKeyCode> for Key {
	fn from(key_code: win::VirtualKeyCode) -> Self {
		match key_code {
			win::VirtualKeyCode::Key1 => Key::Key1,
			win::VirtualKeyCode::Key2 => Key::Key2,
			win::VirtualKeyCode::Key3 => Key::Key3,
			win::VirtualKeyCode::Key4 => Key::Key4,
			win::VirtualKeyCode::Key5 => Key::Key5,
			win::VirtualKeyCode::Key6 => Key::Key6,
			win::VirtualKeyCode::Key7 => Key::Key7,
			win::VirtualKeyCode::Key8 => Key::Key8,
			win::VirtualKeyCode::Key9 => Key::Key9,
			win::VirtualKeyCode::Key0 => Key::Key0,
			win::VirtualKeyCode::A => Key::A,
			win::VirtualKeyCode::B => Key::B,
			win::VirtualKeyCode::C => Key::C,
			win::VirtualKeyCode::D => Key::D,
			win::VirtualKeyCode::E => Key::E,
			win::VirtualKeyCode::F => Key::F,
			win::VirtualKeyCode::G => Key::G,
			win::VirtualKeyCode::H => Key::H,
			win::VirtualKeyCode::I => Key::I,
			win::VirtualKeyCode::J => Key::J,
			win::VirtualKeyCode::K => Key::K,
			win::VirtualKeyCode::L => Key::L,
			win::VirtualKeyCode::M => Key::M,
			win::VirtualKeyCode::N => Key::N,
			win::VirtualKeyCode::O => Key::O,
			win::VirtualKeyCode::P => Key::P,
			win::VirtualKeyCode::Q => Key::Q,
			win::VirtualKeyCode::R => Key::R,
			win::VirtualKeyCode::S => Key::S,
			win::VirtualKeyCode::T => Key::T,
			win::VirtualKeyCode::U => Key::U,
			win::VirtualKeyCode::V => Key::V,
			win::VirtualKeyCode::W => Key::W,
			win::VirtualKeyCode::X => Key::X,
			win::VirtualKeyCode::Y => Key::Y,
			win::VirtualKeyCode::Z => Key::Z,
			win::VirtualKeyCode::Escape => Key::Escape,
			win::VirtualKeyCode::F1 => Key::F1,
			win::VirtualKeyCode::F2 => Key::F2,
			win::VirtualKeyCode::F3 => Key::F3,
			win::VirtualKeyCode::F4 => Key::F4,
			win::VirtualKeyCode::F5 => Key::F5,
			win::VirtualKeyCode::F6 => Key::F6,
			win::VirtualKeyCode::F7 => Key::F7,
			win::VirtualKeyCode::F8 => Key::F8,
			win::VirtualKeyCode::F9 => Key::F9,
			win::VirtualKeyCode::F10 => Key::F10,
			win::VirtualKeyCode::F11 => Key::F11,
			win::VirtualKeyCode::F12 => Key::F12,
			win::VirtualKeyCode::F13 => Key::F13,
			win::VirtualKeyCode::F14 => Key::F14,
			win::VirtualKeyCode::F15 => Key::F15,
			win::VirtualKeyCode::F16 => Key::F16,
			win::VirtualKeyCode::F17 => Key::F17,
			win::VirtualKeyCode::F18 => Key::F18,
			win::VirtualKeyCode::F19 => Key::F19,
			win::VirtualKeyCode::F20 => Key::F20,
			win::VirtualKeyCode::F21 => Key::F21,
			win::VirtualKeyCode::F22 => Key::F22,
			win::VirtualKeyCode::F23 => Key::F23,
			win::VirtualKeyCode::F24 => Key::F24,
			win::VirtualKeyCode::Snapshot => Key::Snapshot,
			win::VirtualKeyCode::Scroll => Key::Scroll,
			win::VirtualKeyCode::Pause => Key::Pause,
			win::VirtualKeyCode::Insert => Key::Insert,
			win::VirtualKeyCode::Home => Key::Home,
			win::VirtualKeyCode::Delete => Key::Delete,
			win::VirtualKeyCode::End => Key::End,
			win::VirtualKeyCode::PageDown => Key::PageDown,
			win::VirtualKeyCode::PageUp => Key::PageUp,
			win::VirtualKeyCode::Left => Key::Left,
			win::VirtualKeyCode::Up => Key::Up,
			win::VirtualKeyCode::Right => Key::Right,
			win::VirtualKeyCode::Down => Key::Down,
			win::VirtualKeyCode::Back => Key::Back,
			win::VirtualKeyCode::Return => Key::Return,
			win::VirtualKeyCode::Space => Key::Space,
			win::VirtualKeyCode::Compose => Key::Compose,
			win::VirtualKeyCode::Caret => Key::Caret,
			win::VirtualKeyCode::Numlock => Key::Numlock,
			win::VirtualKeyCode::Numpad0 => Key::Numpad0,
			win::VirtualKeyCode::Numpad1 => Key::Numpad1,
			win::VirtualKeyCode::Numpad2 => Key::Numpad2,
			win::VirtualKeyCode::Numpad3 => Key::Numpad3,
			win::VirtualKeyCode::Numpad4 => Key::Numpad4,
			win::VirtualKeyCode::Numpad5 => Key::Numpad5,
			win::VirtualKeyCode::Numpad6 => Key::Numpad6,
			win::VirtualKeyCode::Numpad7 => Key::Numpad7,
			win::VirtualKeyCode::Numpad8 => Key::Numpad8,
			win::VirtualKeyCode::Numpad9 => Key::Numpad9,
			win::VirtualKeyCode::NumpadComma => Key::NumpadComma,
			win::VirtualKeyCode::NumpadEnter => Key::NumpadEnter,
			win::VirtualKeyCode::NumpadEquals => Key::NumpadEquals,
			win::VirtualKeyCode::Apostrophe => Key::Apostrophe,
			win::VirtualKeyCode::Apps => Key::Apps,
			win::VirtualKeyCode::At => Key::At,
			win::VirtualKeyCode::Ax => Key::Ax,
			win::VirtualKeyCode::Backslash => Key::Backslash,
			win::VirtualKeyCode::Calculator => Key::Calculator,
			win::VirtualKeyCode::Capital => Key::Capital,
			win::VirtualKeyCode::Colon => Key::Colon,
			win::VirtualKeyCode::Comma => Key::Comma,
			win::VirtualKeyCode::Convert => Key::Convert,
			win::VirtualKeyCode::Equals => Key::Equals,
			win::VirtualKeyCode::Grave => Key::Grave,
			win::VirtualKeyCode::Kana => Key::Kana,
			win::VirtualKeyCode::Kanji => Key::Kanji,
			win::VirtualKeyCode::LAlt => Key::LAlt,
			win::VirtualKeyCode::LBracket => Key::LBracket,
			win::VirtualKeyCode::LControl => Key::LControl,
			win::VirtualKeyCode::LShift => Key::LShift,
			win::VirtualKeyCode::LWin => Key::LWin,
			win::VirtualKeyCode::Mail => Key::Mail,
			win::VirtualKeyCode::MediaSelect => Key::MediaSelect,
			win::VirtualKeyCode::MediaStop => Key::MediaStop,
			win::VirtualKeyCode::Minus => Key::Minus,
			win::VirtualKeyCode::Mute => Key::Mute,
			win::VirtualKeyCode::MyComputer => Key::MyComputer,
			win::VirtualKeyCode::NavigateForward => Key::NavigateForward,
			win::VirtualKeyCode::NavigateBackward => Key::NavigateBackward,
			win::VirtualKeyCode::NextTrack => Key::NextTrack,
			win::VirtualKeyCode::NoConvert => Key::NoConvert,
			win::VirtualKeyCode::OEM102 => Key::OEM102,
			win::VirtualKeyCode::Period => Key::Period,
			win::VirtualKeyCode::PlayPause => Key::PlayPause,
			win::VirtualKeyCode::Power => Key::Power,
			win::VirtualKeyCode::PrevTrack => Key::PrevTrack,
			win::VirtualKeyCode::RAlt => Key::RAlt,
			win::VirtualKeyCode::RBracket => Key::RBracket,
			win::VirtualKeyCode::RControl => Key::RControl,
			win::VirtualKeyCode::RShift => Key::RShift,
			win::VirtualKeyCode::RWin => Key::RWin,
			win::VirtualKeyCode::Semicolon => Key::Semicolon,
			win::VirtualKeyCode::Slash => Key::Slash,
			win::VirtualKeyCode::Sleep => Key::Sleep,
			win::VirtualKeyCode::Stop => Key::Stop,
			win::VirtualKeyCode::Sysrq => Key::Sysrq,
			win::VirtualKeyCode::Tab => Key::Tab,
			win::VirtualKeyCode::Underline => Key::Underline,
			win::VirtualKeyCode::Unlabeled => Key::Unlabeled,
			win::VirtualKeyCode::VolumeDown => Key::VolumeDown,
			win::VirtualKeyCode::VolumeUp => Key::VolumeUp,
			win::VirtualKeyCode::Wake => Key::Wake,
			win::VirtualKeyCode::WebBack => Key::WebBack,
			win::VirtualKeyCode::WebFavorites => Key::WebFavorites,
			win::VirtualKeyCode::WebForward => Key::WebForward,
			win::VirtualKeyCode::WebHome => Key::WebHome,
			win::VirtualKeyCode::WebRefresh => Key::WebRefresh,
			win::VirtualKeyCode::WebSearch => Key::WebSearch,
			win::VirtualKeyCode::WebStop => Key::WebStop,
			win::VirtualKeyCode::Yen => Key::Yen,
			win::VirtualKeyCode::Copy => Key::Copy,
			win::VirtualKeyCode::Paste => Key::Paste,
			win::VirtualKeyCode::Cut => Key::Cut,
			_ => Key::Unknown,
		}
	}
}

#[cfg(feature = "native-client")]
impl From<win::MouseButton> for Key {
	fn from(key_code: win::MouseButton) -> Self {
		match key_code {
			win::MouseButton::Left => Key::LeftMouse,
			win::MouseButton::Right => Key::RightMouse,
			win::MouseButton::Middle => Key::MiddleMouse,
			win::MouseButton::Other(id) => Key::OtherMouse(id),
		}
	}
}
